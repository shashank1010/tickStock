{"version":3,"sources":["Header.jsx","utils/presentation.js","TickerRow.jsx","Ticker.jsx","StockHistory.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","_ref","resetStockList","react_default","a","createElement","Navbar_default","variant","bg","expand","className","Brand","as","Link","to","Nav_default","eventKey","onSelect","dist","render","_ref2","online","Item","concat","lang","navigator","language","userLanguage","number","Intl","NumberFormat","style","currency","currencyDisplay","minimumFractionDigits","maximumFractionDigits","TickerRow","symbol","stock","currentTime","price","history","_history$slice","slice","length","_history$slice2","Object","slicedToArray","oldCost","newCost","hasAppreciation","sparkProps","data","map","height","limit","margin","timeDifference","Math","floor","timeStamp","timeString","react_router_dom","toUpperCase","format","build","fill","opacity","color","size","spotColors","0","-1","1","defaultProp","Date","now","Ticker","stockList","this","props","stockListKeys","keys","sort","Fragment","Table_default","striped","bordered","hover","width","src_TickerRow","key","Alert_default","React","Component","StockNoDataInfo","Heading","StockHistory","_this$props","symbolLabel","otherStocks","filter","stockSymbol","StockHistory_StockNoDataInfo","toConsumableArray","reverse","Dropdown_default","Toggle","id","Menu","type","_ref3","i","self","_toLocaleString$split","toLocaleString","split","_toLocaleString$split2","date","time","isLastItem","difference","absoluteDiff","abs","App","state","config","showHistogram","showSparks","_this2","connection","WebSocket","onmessage","updateStocks","bind","onclose","e","console","log","setState","connectionError","newStocks","JSON","parse","forEach","push","tickerProps","src_Header","Container_default","react_router","exact","path","children","src_Ticker","_ref4","match","params","toLowerCase","historyProps","src_StockHistory","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","App_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d23d7f28.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\"\nimport { Detector } from \"react-detect-offline\"\nimport { Link } from \"react-router-dom\"\n\nimport Navbar from \"react-bootstrap/Navbar\"\nimport Nav from \"react-bootstrap/Nav\"\n\n\n\nconst Header = ({ resetStockList }) => (\n\t<Navbar variant=\"dark\" bg=\"dark\" expand=\"lg\" className=\"position-sticky sticky-top\">\n\t\t<Navbar.Brand as={Link} to=\"/\">Stock Ticker</Navbar.Brand>\n\n\t\t<Nav className=\"ml-auto\">\n\t\t\t<Nav.Link eventKey=\"resetStocks\" onSelect={ resetStockList }>Reset Stock History</Nav.Link>\n\t\t\t\t<Detector render={({ online }) => (\n\t\t\t\t\t<Nav.Item className={`live-status my-n2 d-flex align-items-center justify-content-center px-3 ml-2 font-weight-bold ${online ? \"bg-white text-success\" : \"bg-danger text-white\"}`}>\n\t\t\t\t\t\t{online ? \"LIVE\" : \"OFFLINE\"}\n\t\t\t\t\t</Nav.Item>\n\t\t\t\t)} />\n\t\t</Nav>\n\t</Navbar>\n)\nexport default Header\n\n\nHeader.propTypes = {\n\tresetStockList: PropTypes.func.isRequired\n}","export const lang = navigator.language || navigator.userLanguage\nexport const number = Intl.NumberFormat(lang, {\n    style: 'currency',\n    currency: 'USD',\n    currencyDisplay: 'code',\n    minimumFractionDigits: '2',\n    maximumFractionDigits: '2',\n})","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"react-router-dom\"\nimport { Sparklines, SparklinesCurve, SparklinesSpots, SparklinesBars } from 'react-sparklines';\n\nimport { number } from \"./utils/presentation\"\n\nconst TickerRow = ({ symbol, stock, currentTime }) => {\n    const { price, history } = stock\n    const [ oldCost, newCost ] = history.slice(history.length - 2)\n    const hasAppreciation = newCost ? oldCost.price < newCost.price : null\n    const data = history.map(({ price }) => price)\n    const sparkProps = {\n        data,\n        height: 15,\n        limit: 25,\n        margin: 1\n    }\n    const timeDifference = Math.floor((currentTime - (newCost || oldCost).timeStamp) / 1000)\n    const timeString = timeDifference === 0 ? \"just now\" : timeDifference === 1 ? \"1 second ago\" : `${timeDifference} seconds ago`\n    return (\n        <tr className=\"vert\">\n            <td className=\"align-middle\">\n                <Link to={ `/${symbol}` }><strong>{ symbol.toUpperCase() }</strong></Link>\n            </td>\n            <td className={`align-middle text-${ hasAppreciation === null ? \"\" : hasAppreciation === false ? 'danger' : 'success'}`}>{ number.format(price) }</td>\n            <td className=\"align-middle\">\n                { timeString }\n            </td>\n            <td className=\"align-middle p-0\">\n                <Sparklines { ...sparkProps }>\n                    <SparklinesBars style={{ fill: '#41c3f9', opacity: 0.3 }} />\n                    <SparklinesCurve color=\"#41c3f9\" style={{ fill: \"none\" }} />\n                    <SparklinesSpots size={1} spotColors={{ '0': 'white', '-1': 'red', '1': 'green' }} />\n                </Sparklines>\n            </td>\n        </tr>\n    )\n}\n\nexport default TickerRow\n\nTickerRow.propTypes = {\n    currentTime: PropTypes.number,\n    symbol: PropTypes.string.isRequired,\n    stock: PropTypes.shape({\n        price: PropTypes.number.isRequired,\n        history: PropTypes.arrayOf(PropTypes.shape({\n            price: PropTypes.number.isRequired,\n            timeStamp: PropTypes.number\n        })).isRequired\n    }).isRequired\n}\n\nTickerRow.defaultProp = {\n    currentTime: Date.now()\n}","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport Table from \"react-bootstrap/Table\"\nimport Alert from \"react-bootstrap/Alert\"\n\nimport TickerRow from \"./TickerRow\"\n\n\nclass Ticker extends React.Component{\n    render() {\n        const stockList = this.props.stockList\n        const stockListKeys = Object.keys(stockList).sort()\n        const currentTime = Date.now()\n        return (\n            <>\n                <Table striped bordered hover size=\"sm\" className=\"m-0\">\n                    <thead>\n                        <tr>\n                            <th style={{ width: '10ch' }}>Code</th>\n                            <th style={{ width: '10ch' }}>Price</th>\n                            <th style={{ width: \"15ch\" }}>Last Updated At</th>\n                            <th>History</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            stockListKeys.length > 0 &&\n                            stockListKeys.map((symbol) => (\n                                <TickerRow\n                                    key={ symbol }\n                                    symbol={ symbol }\n                                    stock={ stockList[symbol] }\n                                    currentTime = { currentTime }\n                                    />\n                            ))\n                        }\n                    </tbody>\n                </Table>\n                {\n                    stockListKeys.length === 0 &&\n                    <Alert variant=\"dark\" className=\"rounded-bottom text-center border-0 rounded-top-0\">Loading...</Alert>\n                }\n            </>\n        )\n    }\n}\n\nexport default Ticker\n\nTicker.propTypes = {\n    stockList: PropTypes.objectOf(\n        PropTypes.shape({\n            price: PropTypes.number.isRequired,\n            history: PropTypes.arrayOf(PropTypes.shape({\n                price: PropTypes.number.isRequired,\n                timeStamp: PropTypes.number.isRequired\n            })).isRequired\n        })\n    )\n}","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Alert from \"react-bootstrap/Alert\"\nimport Table from \"react-bootstrap/Table\"\nimport Dropdown from \"react-bootstrap/Dropdown\"\nimport { Sparklines, SparklinesCurve, SparklinesSpots, SparklinesReferenceLine } from 'react-sparklines';\nimport { Link } from \"react-router-dom\"\n\nimport { number } from \"./utils/presentation\"\n\nconst StockNoDataInfo = ({ symbol }) => (\n\t<Alert variant=\"info\">\n\t\t<Alert.Heading>Something seems to be wrong! We have no history found for <strong>{ symbol }</strong></Alert.Heading>\n\t\t<p>\n\t\t\tWell, this is embarrassing! Probably you are here too early, or the symbol is invalid.<br />\n\t\t\tGive it some time, if the symbol is valid the it's history will show up here.\n\t\t</p>\n\t\t<hr />\n\t\t<p className=\"mb-0\">\n\t\t\tFeel free to navigate <Alert.Link as={Link} to=\"/\">back to the list</Alert.Link> and pick a symbol to view its history\n\t\t</p>\n\t</Alert>\n)\n\nclass StockHistory extends React.Component {\n\trender() {\n\t\tconst { stockList, symbol } = this.props\n\t\tconst stock = stockList[symbol] || null\n\t\tconst symbolLabel = symbol.toUpperCase()\n\n\t\tconst otherStocks = Object.keys(stockList).filter(stockSymbol => stockSymbol !== symbol)\n\n\t\tif(stock === null)\n\t\t\treturn <StockNoDataInfo symbol={ symbolLabel } />\n\n\t\tconst history = [...stock.history].reverse()\n\t\tconst data = history.map(({ price }) => price)\n\n\t\tconst sparkProps = {\n\t\t\t\tdata: data,\n\t\t\t\twidth: 100,\n\t\t\t\theight: 20,\n\t\t\t\tmargin: 1\n\t\t}\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<h1>\n\t\t\t\t\tTicker Symbol:\n\t\t\t\t\t\n\t\t\t\t\t<Dropdown as=\"span\" className=\"d-inline-block ml-1\">\n\t\t\t\t\t\t<Dropdown.Toggle as=\"strong\" variant=\"link\" id=\"stick-list-dropdown\">\n\t\t\t\t\t\t\t{ symbolLabel }\n\t\t\t\t\t\t</Dropdown.Toggle>\n\n\t\t\t\t\t\t<Dropdown.Menu>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\totherStocks.map((symbol) => (\n\t\t\t\t\t\t\t\t\t<Dropdown.Item key={ symbol } as={ Link } to={`/${symbol}`}>{ symbol.toUpperCase() }</Dropdown.Item>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t</Dropdown>\n\t\t\t\t</h1>\n\n\t\t\t\t{\n\t\t\t\t\tdata.length > 1\n\t\t\t\t\t? (\n\t\t\t\t\t\t<div className=\"my-3\" >\n\t\t\t\t\t\t\t<Sparklines { ...sparkProps }>\n\t\t\t\t\t\t\t\t<SparklinesCurve color=\"#41c3f9\" style={{ fill: \"lightslategray\" }} />\n\t\t\t\t\t\t\t\t<SparklinesSpots size={1} spotColors={{ '0': 'white', '-1': 'red', '1': 'green' }} />\n\t\t\t\t\t\t\t\t<SparklinesReferenceLine type=\"mean\" />\n\t\t\t\t\t\t\t</Sparklines>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t\t: (\n\t\t\t\t\t\t<Alert variant=\"info\" className=\"text-center\">\n\t\t\t\t\t\t\tGraph will be load here when more data is available.\n\t\t\t\t\t\t</Alert>\n\t\t\t\t\t)\n\t\t\t\t}\n\n\t\t\t\t<Table striped bordered hover size=\"sm\" className=\"m-0\">\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<th style={{ width: \"5ch\" }}></th>\n\t\t\t\t\t\t\t\t\t\t<th>Price</th>\n\t\t\t\t\t\t\t\t\t\t<th>Difference</th>\n\t\t\t\t\t\t\t\t\t\t<th>Date</th>\n\t\t\t\t\t\t\t\t\t\t<th>Time</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\thistory.map(({price, timeStamp}, i, self) => {\n\t\t\t\t\t\t\t\t\tconst [date, time] = (new Date(timeStamp)).toLocaleString().split(',')\n\t\t\t\t\t\t\t\t\tconst isLastItem = i + 1 === history.length\n\t\t\t\t\t\t\t\t\tconst difference = !isLastItem && price - history[i+1].price\n\t\t\t\t\t\t\t\t\tconst absoluteDiff = isLastItem ? '-' : number.format(Math.abs(difference))\n\t\t\t\t\t\t\t\t\tconst className = isLastItem ? \"\" : difference > 0 ? \"danger\" : \"success\"\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<tr key={i}>\n\t\t\t\t\t\t\t\t\t\t\t<td>{ self.length - i }</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>{ number.format(price) }</td>\n\t\t\t\t\t\t\t\t\t\t\t<td className={ className && `text-${className}` }>{ absoluteDiff }</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>{ date }</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>{ time }</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t</Table>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default StockHistory\n\nStockHistory.propTypes = {\n\tsymbol: PropTypes.string.isRequired,\n\tstockList: PropTypes.objectOf(\n\t\tPropTypes.shape({\n\t\t\t\tprice: PropTypes.number.isRequired,\n\t\t\t\thistory: PropTypes.arrayOf(PropTypes.shape({\n\t\t\t\t\t\tprice: PropTypes.number.isRequired,\n\t\t\t\t\t\ttimeStamp: PropTypes.number.isRequired\n\t\t\t\t})).isRequired\n\t\t})\n\t).isRequired\n}","import './App.css';\n\nimport React from 'react';\nimport Container from 'react-bootstrap/Container'\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\"\n\nimport Header from \"./Header\"\nimport Ticker from \"./Ticker\"\nimport StockHistory from \"./StockHistory\"\n\n\nexport default class App extends React.Component{\n\tstate = {\n\t\tstockList: {},\n\t\tconfig: {\n\t\t\tshowHistogram: false,\n\t\t\tshowSparks: true\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\tthis.connection = new WebSocket('ws://stocks.mnet.website');\n\t\tthis.connection.onmessage = this.updateStocks.bind(this)\n\n\t\tthis.connection.onclose = (e) => {\n\t\t\tconsole.log(e)\n\t\t\tthis.setState({connectionError: true})\n\t\t}\n\t}\n\t\n\tupdateStocks({ data }) {\n\t\tconst newStocks = JSON.parse(data)\n\t\tconst timeStamp = Date.now()\n\n\t\tconst stockList = this.state.stockList\n\n\t\tnewStocks.forEach(([symbol, value]) => {\n\t\t\tconst price = +value\n\t\t\tif(stockList[symbol]){ \n\t\t\t\tstockList[symbol].price = price\n\t\t\t\tstockList[symbol].history.push({ price, timeStamp })\n\t\t\t} else {\n\t\t\t\tstockList[symbol] = { price, history: [{ price, timeStamp }] }\n\t\t\t}\n\t\t})\n\n\t\tthis.setState({ stockList })\n\t}\n\n\tresetStockList() {\n\t\tthis.setState({ stockList: {} })\n\t}\n\t\n\n\trender() {\n\t\tconst stockList = this.state.stockList\n\t\tconst tickerProps = { \n\t\t\tstockList\n\t\t}\n\t\treturn (\n\t\t\t<Router className=\"stock-ticker-app\">\n\t\t\t\t<Header resetStockList={this.resetStockList.bind(this)} />\n\n\t\t\t\t<Container className=\"py-3\">\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\" children={ () => <Ticker { ...tickerProps } /> } />\n\t\t\t\t\t\t<Route path=\"/:symbol\" children={ ({ match }) => {\n\t\t\t\t\t\t\tconst symbol = match.params.symbol.toLowerCase()\n\t\t\t\t\t\t\tconst historyProps = { stockList, symbol }\n\t\t\t\t\t\t\treturn <StockHistory { ...historyProps } />\n\t\t\t\t\t\t} } />\n\t\t\t\t\t</Switch>\n\t\t\t\t</Container>\n\t\t\t</Router>\n\t\t);\n\t}\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}